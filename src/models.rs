use diesel::prelude::*;
use crate::schema::posts;       // diesel CLI generated struct
// struct needs to match the structure of SQL query
// or more accurately, the generated schema.rs file
// Queryable trait : will geerate all of the code needed to load a Post struct from a SQL query
//
// Selectable trait : will generate code to construct a matching select clause based on your model type based on table defined
// via #[diesel(table_name=crate::schema::posts)]
#[derive(Queryable, Selectable)]        
#[diesel(table_name = crate::schema::posts)]
#[diesel(check_for_backend(diesel::pg::Pg))]
pub struct Post {
    pub id : i32,
    pub title : String,
    pub body : String,
    pub published : bool,
}

// struct to use for inserting a new record
// recall that id is autogenerated
// published has an automatic default value of false
// therefore not included and instead we only include title and body instead
#[derive(Insertable)]
#[diesel(table_name=posts)]
pub struct NewPost<'a> {
    pub title : &'a str,
    pub body : &'a str

}